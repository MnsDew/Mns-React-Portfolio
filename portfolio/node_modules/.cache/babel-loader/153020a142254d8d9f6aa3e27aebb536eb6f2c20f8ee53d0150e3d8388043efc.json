{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mnsso\\\\Documents\\\\ReactBootcamp\\\\My-React-portfolio\\\\portfolio\\\\src\\\\components\\\\Technologies.js\",\n  _s = $RefreshSig$();\n//  import React from \"react\";\n//  import IMAGES from \"../data/images.js\";\n//  import ImageShadow from \"react-image-shadow\";\n//  import \"react-image-shadow/assets/index.css\";\n\n//  const Technologies = () => {\n//     return(\n//         <div> \n//           <h2 className=\"tech-heading\">Technologies & Languages That Drive My Development Journey</h2>\n//           <h3 className=\"tech-heading\">Here‚Äôs What‚Äôs Under the Hood üõ†Ô∏è</h3>\n//        {IMAGES.map(imageObject => { //we are moving through the map function\n//         return <Image key= {imageObject.id} src={imageObject.image} desc={imageObject.description}/>\n//        })}\n//         </div>\n//     )\n//  }\n//  const Image = ({src , desc}) => { // we need to get them as input parameters , deconstruct way \n// or inside (props) and down write src,desc WAY2 \n// we use a or <a/> element to be clickable \n// and we get the paramaters from the other component \n//     return (\n//         <div className=\"technologies\">\n//      <a target=\"_blank\" rel=\"\" href={src}>\n//         <ImageShadow className =\"image-shadow\"src={src}/></a>\n//         <p>{desc}</p>\n//         </div>\n//     )\n//  }\n\nexport default Technologies;\nimport React, { useState } from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Image = ({\n  src,\n  desc\n}) => {\n  _s();\n  const [isFlipped, setIsFlipped] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"technologies\",\n    children: /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      isFlipped: isFlipped,\n      flipDirection: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsFlipped(!isFlipped),\n        className: \"front-card\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsFlipped(!isFlipped),\n        className: \"back-card\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Image, \"9NPh+N5IPOCpZ+AUtVyw7TZ32I8=\");\n_c = Image;\nvar _c;\n$RefreshReg$(_c, \"Image\");","map":{"version":3,"names":["Technologies","React","useState","ReactCardFlip","jsxDEV","_jsxDEV","Image","src","desc","_s","isFlipped","setIsFlipped","className","children","flipDirection","onClick","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mnsso/Documents/ReactBootcamp/My-React-portfolio/portfolio/src/components/Technologies.js"],"sourcesContent":["//  import React from \"react\";\r\n//  import IMAGES from \"../data/images.js\";\r\n//  import ImageShadow from \"react-image-shadow\";\r\n//  import \"react-image-shadow/assets/index.css\";\r\n\r\n//  const Technologies = () => {\r\n//     return(\r\n//         <div> \r\n//           <h2 className=\"tech-heading\">Technologies & Languages That Drive My Development Journey</h2>\r\n//           <h3 className=\"tech-heading\">Here‚Äôs What‚Äôs Under the Hood üõ†Ô∏è</h3>\r\n//        {IMAGES.map(imageObject => { //we are moving through the map function\r\n//         return <Image key= {imageObject.id} src={imageObject.image} desc={imageObject.description}/>\r\n//        })}\r\n//         </div>\r\n//     )\r\n//  }\r\n//  const Image = ({src , desc}) => { // we need to get them as input parameters , deconstruct way \r\n    // or inside (props) and down write src,desc WAY2 \r\n    // we use a or <a/> element to be clickable \r\n    // and we get the paramaters from the other component \r\n//     return (\r\n//         <div className=\"technologies\">\r\n//      <a target=\"_blank\" rel=\"\" href={src}>\r\n//         <ImageShadow className =\"image-shadow\"src={src}/></a>\r\n//         <p>{desc}</p>\r\n//         </div>\r\n//     )\r\n//  }\r\n\r\n export default Technologies;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\n\r\nconst Image = ({ src, desc }) => {\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  return (\r\n    <div className=\"technologies\">\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n        <div onClick={() => setIsFlipped(!isFlipped)} className=\"front-card\">\r\n          <img src={src} alt={desc} />\r\n        </div>\r\n        <div onClick={() => setIsFlipped(!isFlipped)} className=\"back-card\">\r\n          <p>{desc}</p>\r\n        </div>\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,eAAeA,YAAY;AAG5B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,KAAK,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACEG,OAAA;IAAKO,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BR,OAAA,CAACF,aAAa;MAACO,SAAS,EAAEA,SAAU;MAACI,aAAa,EAAC,YAAY;MAAAD,QAAA,gBAC7DR,OAAA;QAAKU,OAAO,EAAEA,CAAA,KAAMJ,YAAY,CAAC,CAACD,SAAS,CAAE;QAACE,SAAS,EAAC,YAAY;QAAAC,QAAA,eAClER,OAAA;UAAKE,GAAG,EAAEA,GAAI;UAACS,GAAG,EAAER;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACNf,OAAA;QAAKU,OAAO,EAAEA,CAAA,KAAMJ,YAAY,CAAC,CAACD,SAAS,CAAE;QAACE,SAAS,EAAC,WAAW;QAAAC,QAAA,eACjER,OAAA;UAAAQ,QAAA,EAAIL;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACX,EAAA,CAfIH,KAAK;AAAAe,EAAA,GAALf,KAAK;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}